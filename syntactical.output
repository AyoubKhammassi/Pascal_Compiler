Terminals unused in grammar

   semi_colon
   colon
   point
   comma
   comment_start
   comment_end
   PROGRAM
   ID


State 17 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 functions: /* empty */
    2          | functions function

    3 function: "function" IDENTIFIER '(' paramdecls ')' type var_defs ';' stmnt

    4 paramdecls: /* empty */
    5           | paramdecl

    6 paramdecl: paramdecl ',' IDENTIFIER type
    7          | IDENTIFIER type

    8 type: ':' "int"

    9 stmnt: rec_stmnt END
   10      | IF '(' expr ')' THEN stmnt ELSE stmnt
   11      | WHILE '(' expr ')' stmnt
   12      | RETURN expr ';'
   13      | expr ';'
   14      | ';'

   15 rec_stmnt: BEGIN
   16          | rec_stmnt stmnt

   17 expr: NUMCONST
   18     | IDENTIFIER
   19     | '(' expr ')'
   20     | expr '[' expr ']'
   21     | expr '(' ')'
   22     | expr '(' expr ')'
   23     | expr '+' expr
   24     | expr '-' expr
   25     | expr '*' expr
   26     | expr ":=" expr
   27     | expr "*=" expr
   28     | expr "+=" expr
   29     | expr "-=" expr
   30     | expr "--"
   31     | expr "++"
   32     | expr "||" expr
   33     | expr "&&" expr
   34     | expr "==" expr
   35     | expr "!=" expr
   36     | expr ',' expr

   37 var_defs: VAR IDENTIFIER '=' expr
   38         | VAR IDENTIFIER
   39         | var_defs ',' IDENTIFIER '=' expr
   40         | var_defs ',' IDENTIFIER

   41 prog: "program" IDENTIFIER ':' var_defs ';' functions stmnt


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 10 11 19 21 22
')' (41) 3 10 11 19 21 22
'*' (42) 25
'+' (43) 23
',' (44) 6 36 39 40
'-' (45) 24
':' (58) 8 41
';' (59) 3 12 13 14 41
'=' (61) 37 39
'[' (91) 20
']' (93) 20
error (256)
semi_colon (258)
colon (259)
point (260)
comma (261)
comment_start (262)
comment_end (263)
PROGRAM (264)
ID (265)
VAR (266) 37 38
"function" (267) 3
"program" (268) 41
"int" (269) 8
NUMCONST (270) 17
BEGIN (271) 15
END (272) 9
IDENTIFIER (273) 3 6 7 18 37 38 39 40 41
RETURN (274) 12
IF (275) 10
THEN (276) 10
ELSE (277) 10
WHILE (278) 11
":=" (279) 26
"*=" (280) 27
"+=" (281) 28
"-=" (282) 29
"||" (283) 32
"&&" (284) 33
"==" (285) 34
"!=" (286) 35
"++" (287) 31
"--" (288) 30


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
functions (46)
    on left: 1 2, on right: 2 41
function (47)
    on left: 3, on right: 2
paramdecls (48)
    on left: 4 5, on right: 3
paramdecl (49)
    on left: 6 7, on right: 5 6
type (50)
    on left: 8, on right: 3 6 7
stmnt (51)
    on left: 9 10 11 12 13 14, on right: 3 10 11 16 41
rec_stmnt (52)
    on left: 15 16, on right: 9 16
expr (53)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36, on right: 10 11 12 13 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 35 36 37 39
var_defs (54)
    on left: 37 38 39 40, on right: 3 39 40 41
prog (55)
    on left: 41, on right: 0


State 0

    0 $accept: . prog $end
   41 prog: . "program" IDENTIFIER ':' var_defs ';' functions stmnt

    "program"  shift, and go to state 1

    prog  go to state 2


State 1

   41 prog: "program" . IDENTIFIER ':' var_defs ';' functions stmnt

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


State 3

   41 prog: "program" IDENTIFIER . ':' var_defs ';' functions stmnt

    ':'  shift, and go to state 5


State 4

    0 $accept: prog $end .

    $default  accept


State 5

   37 var_defs: . VAR IDENTIFIER '=' expr
   38         | . VAR IDENTIFIER
   39         | . var_defs ',' IDENTIFIER '=' expr
   40         | . var_defs ',' IDENTIFIER
   41 prog: "program" IDENTIFIER ':' . var_defs ';' functions stmnt

    VAR  shift, and go to state 6

    var_defs  go to state 7


State 6

   37 var_defs: VAR . IDENTIFIER '=' expr
   38         | VAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 8


State 7

   39 var_defs: var_defs . ',' IDENTIFIER '=' expr
   40         | var_defs . ',' IDENTIFIER
   41 prog: "program" IDENTIFIER ':' var_defs . ';' functions stmnt

    ';'  shift, and go to state 9
    ','  shift, and go to state 10


State 8

   37 var_defs: VAR IDENTIFIER . '=' expr
   38         | VAR IDENTIFIER .  [';', ',']

    '='  shift, and go to state 11

    $default  reduce using rule 38 (var_defs)


State 9

    1 functions: .
    2          | . functions function
   41 prog: "program" IDENTIFIER ':' var_defs ';' . functions stmnt

    $default  reduce using rule 1 (functions)

    functions  go to state 12


State 10

   39 var_defs: var_defs ',' . IDENTIFIER '=' expr
   40         | var_defs ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


State 11

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr
   37 var_defs: VAR IDENTIFIER '=' . expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 17


State 12

    2 functions: functions . function
    3 function: . "function" IDENTIFIER '(' paramdecls ')' type var_defs ';' stmnt
    9 stmnt: . rec_stmnt END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   11      | . WHILE '(' expr ')' stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr
   41 prog: "program" IDENTIFIER ':' var_defs ';' functions . stmnt

    "function"  shift, and go to state 18
    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    function   go to state 24
    stmnt      go to state 25
    rec_stmnt  go to state 26
    expr       go to state 27


State 13

   39 var_defs: var_defs ',' IDENTIFIER . '=' expr
   40         | var_defs ',' IDENTIFIER .  [';', ',']

    '='  shift, and go to state 28

    $default  reduce using rule 40 (var_defs)


State 14

   17 expr: NUMCONST .

    $default  reduce using rule 17 (expr)


State 15

   18 expr: IDENTIFIER .

    $default  reduce using rule 18 (expr)


State 16

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   19     | '(' . expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 29


State 17

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr
   37 var_defs: VAR IDENTIFIER '=' expr .  [';', ',']

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    ','       [reduce using rule 37 (var_defs)]
    $default  reduce using rule 37 (var_defs)


State 18

    3 function: "function" . IDENTIFIER '(' paramdecls ')' type var_defs ';' stmnt

    IDENTIFIER  shift, and go to state 46


State 19

   15 rec_stmnt: BEGIN .

    $default  reduce using rule 15 (rec_stmnt)


State 20

   12 stmnt: RETURN . expr ';'
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 47


State 21

   10 stmnt: IF . '(' expr ')' THEN stmnt ELSE stmnt

    '('  shift, and go to state 48


State 22

   11 stmnt: WHILE . '(' expr ')' stmnt

    '('  shift, and go to state 49


State 23

   14 stmnt: ';' .

    $default  reduce using rule 14 (stmnt)


State 24

    2 functions: functions function .

    $default  reduce using rule 2 (functions)


State 25

   41 prog: "program" IDENTIFIER ':' var_defs ';' functions stmnt .

    $default  reduce using rule 41 (prog)


State 26

    9 stmnt: . rec_stmnt END
    9      | rec_stmnt . END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   11      | . WHILE '(' expr ')' stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   16          | rec_stmnt . stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    END         shift, and go to state 50
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    stmnt      go to state 51
    rec_stmnt  go to state 26
    expr       go to state 27


State 27

   13 stmnt: expr . ';'
   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ';'   shift, and go to state 52
    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45


State 28

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr
   39 var_defs: var_defs ',' IDENTIFIER '=' . expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 53


State 29

   19 expr: '(' expr . ')'
   20     | expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45
    ')'   shift, and go to state 54


State 30

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr
   36     | expr ',' . expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 55


State 31

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   26     | expr ":=" . expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 56


State 32

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   27     | expr "*=" . expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 57


State 33

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   28     | expr "+=" . expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 58


State 34

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   29     | expr "-=" . expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 59


State 35

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   32     | expr "||" . expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 60


State 36

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   33     | expr "&&" . expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 61


State 37

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   34     | expr "==" . expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 62


State 38

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   35     | expr "!=" . expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 63


State 39

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   23     | expr '+' . expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 64


State 40

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   24     | expr '-' . expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 65


State 41

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   25     | expr '*' . expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 66


State 42

   31 expr: expr "++" .

    $default  reduce using rule 31 (expr)


State 43

   30 expr: expr "--" .

    $default  reduce using rule 30 (expr)


State 44

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   21     | expr '(' . ')'
   22     | . expr '(' expr ')'
   22     | expr '(' . expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16
    ')'         shift, and go to state 67

    expr  go to state 68


State 45

   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   20     | expr '[' . expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 69


State 46

    3 function: "function" IDENTIFIER . '(' paramdecls ')' type var_defs ';' stmnt

    '('  shift, and go to state 70


State 47

   12 stmnt: RETURN expr . ';'
   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ';'   shift, and go to state 71
    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45


State 48

   10 stmnt: IF '(' . expr ')' THEN stmnt ELSE stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 72


State 49

   11 stmnt: WHILE '(' . expr ')' stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    expr  go to state 73


State 50

    9 stmnt: rec_stmnt END .

    $default  reduce using rule 9 (stmnt)


State 51

   16 rec_stmnt: rec_stmnt stmnt .

    $default  reduce using rule 16 (rec_stmnt)


State 52

   13 stmnt: expr ';' .

    $default  reduce using rule 13 (stmnt)


State 53

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr
   39 var_defs: var_defs ',' IDENTIFIER '=' expr .  [';', ',']

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 39 (var_defs)

    Conflict between rule 39 and token ',' resolved as reduce (%left ',').


State 54

   19 expr: '(' expr ')' .

    $default  reduce using rule 19 (expr)


State 55

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr
   36     | expr ',' expr .  [';', ',', ')', ']']

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token ',' resolved as reduce (%left ',').
    Conflict between rule 36 and token ":=" resolved as shift (',' < ":=").
    Conflict between rule 36 and token "*=" resolved as shift (',' < "*=").
    Conflict between rule 36 and token "+=" resolved as shift (',' < "+=").
    Conflict between rule 36 and token "-=" resolved as shift (',' < "-=").
    Conflict between rule 36 and token "||" resolved as shift (',' < "||").
    Conflict between rule 36 and token "&&" resolved as shift (',' < "&&").
    Conflict between rule 36 and token "==" resolved as shift (',' < "==").
    Conflict between rule 36 and token "!=" resolved as shift (',' < "!=").
    Conflict between rule 36 and token '+' resolved as shift (',' < '+').
    Conflict between rule 36 and token '-' resolved as shift (',' < '-').
    Conflict between rule 36 and token '*' resolved as shift (',' < '*').
    Conflict between rule 36 and token "++" resolved as shift (',' < "++").
    Conflict between rule 36 and token "--" resolved as shift (',' < "--").
    Conflict between rule 36 and token '(' resolved as shift (',' < '(').
    Conflict between rule 36 and token '[' resolved as shift (',' < '[').


State 56

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   26     | expr ":=" expr .  [';', ',', ')', ']']
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token ',' resolved as reduce (',' < ":=").
    Conflict between rule 26 and token ":=" resolved as shift (%right ":=").
    Conflict between rule 26 and token "*=" resolved as shift (%right "*=").
    Conflict between rule 26 and token "+=" resolved as shift (%right "+=").
    Conflict between rule 26 and token "-=" resolved as shift (%right "-=").
    Conflict between rule 26 and token "||" resolved as shift (":=" < "||").
    Conflict between rule 26 and token "&&" resolved as shift (":=" < "&&").
    Conflict between rule 26 and token "==" resolved as shift (":=" < "==").
    Conflict between rule 26 and token "!=" resolved as shift (":=" < "!=").
    Conflict between rule 26 and token '+' resolved as shift (":=" < '+').
    Conflict between rule 26 and token '-' resolved as shift (":=" < '-').
    Conflict between rule 26 and token '*' resolved as shift (":=" < '*').
    Conflict between rule 26 and token "++" resolved as shift (":=" < "++").
    Conflict between rule 26 and token "--" resolved as shift (":=" < "--").
    Conflict between rule 26 and token '(' resolved as shift (":=" < '(').
    Conflict between rule 26 and token '[' resolved as shift (":=" < '[').


State 57

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   27     | expr "*=" expr .  [';', ',', ')', ']']
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token ',' resolved as reduce (',' < "*=").
    Conflict between rule 27 and token ":=" resolved as shift (%right ":=").
    Conflict between rule 27 and token "*=" resolved as shift (%right "*=").
    Conflict between rule 27 and token "+=" resolved as shift (%right "+=").
    Conflict between rule 27 and token "-=" resolved as shift (%right "-=").
    Conflict between rule 27 and token "||" resolved as shift ("*=" < "||").
    Conflict between rule 27 and token "&&" resolved as shift ("*=" < "&&").
    Conflict between rule 27 and token "==" resolved as shift ("*=" < "==").
    Conflict between rule 27 and token "!=" resolved as shift ("*=" < "!=").
    Conflict between rule 27 and token '+' resolved as shift ("*=" < '+').
    Conflict between rule 27 and token '-' resolved as shift ("*=" < '-').
    Conflict between rule 27 and token '*' resolved as shift ("*=" < '*').
    Conflict between rule 27 and token "++" resolved as shift ("*=" < "++").
    Conflict between rule 27 and token "--" resolved as shift ("*=" < "--").
    Conflict between rule 27 and token '(' resolved as shift ("*=" < '(').
    Conflict between rule 27 and token '[' resolved as shift ("*=" < '[').


State 58

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   28     | expr "+=" expr .  [';', ',', ')', ']']
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token ',' resolved as reduce (',' < "+=").
    Conflict between rule 28 and token ":=" resolved as shift (%right ":=").
    Conflict between rule 28 and token "*=" resolved as shift (%right "*=").
    Conflict between rule 28 and token "+=" resolved as shift (%right "+=").
    Conflict between rule 28 and token "-=" resolved as shift (%right "-=").
    Conflict between rule 28 and token "||" resolved as shift ("+=" < "||").
    Conflict between rule 28 and token "&&" resolved as shift ("+=" < "&&").
    Conflict between rule 28 and token "==" resolved as shift ("+=" < "==").
    Conflict between rule 28 and token "!=" resolved as shift ("+=" < "!=").
    Conflict between rule 28 and token '+' resolved as shift ("+=" < '+').
    Conflict between rule 28 and token '-' resolved as shift ("+=" < '-').
    Conflict between rule 28 and token '*' resolved as shift ("+=" < '*').
    Conflict between rule 28 and token "++" resolved as shift ("+=" < "++").
    Conflict between rule 28 and token "--" resolved as shift ("+=" < "--").
    Conflict between rule 28 and token '(' resolved as shift ("+=" < '(').
    Conflict between rule 28 and token '[' resolved as shift ("+=" < '[').


State 59

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   29     | expr "-=" expr .  [';', ',', ')', ']']
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token ',' resolved as reduce (',' < "-=").
    Conflict between rule 29 and token ":=" resolved as shift (%right ":=").
    Conflict between rule 29 and token "*=" resolved as shift (%right "*=").
    Conflict between rule 29 and token "+=" resolved as shift (%right "+=").
    Conflict between rule 29 and token "-=" resolved as shift (%right "-=").
    Conflict between rule 29 and token "||" resolved as shift ("-=" < "||").
    Conflict between rule 29 and token "&&" resolved as shift ("-=" < "&&").
    Conflict between rule 29 and token "==" resolved as shift ("-=" < "==").
    Conflict between rule 29 and token "!=" resolved as shift ("-=" < "!=").
    Conflict between rule 29 and token '+' resolved as shift ("-=" < '+').
    Conflict between rule 29 and token '-' resolved as shift ("-=" < '-').
    Conflict between rule 29 and token '*' resolved as shift ("-=" < '*').
    Conflict between rule 29 and token "++" resolved as shift ("-=" < "++").
    Conflict between rule 29 and token "--" resolved as shift ("-=" < "--").
    Conflict between rule 29 and token '(' resolved as shift ("-=" < '(').
    Conflict between rule 29 and token '[' resolved as shift ("-=" < '[').


State 60

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   32     | expr "||" expr .  [';', ',', ":=", "*=", "+=", "-=", "||", ')', ']']
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token ',' resolved as reduce (',' < "||").
    Conflict between rule 32 and token ":=" resolved as reduce (":=" < "||").
    Conflict between rule 32 and token "*=" resolved as reduce ("*=" < "||").
    Conflict between rule 32 and token "+=" resolved as reduce ("+=" < "||").
    Conflict between rule 32 and token "-=" resolved as reduce ("-=" < "||").
    Conflict between rule 32 and token "||" resolved as reduce (%left "||").
    Conflict between rule 32 and token "&&" resolved as shift ("||" < "&&").
    Conflict between rule 32 and token "==" resolved as shift ("||" < "==").
    Conflict between rule 32 and token "!=" resolved as shift ("||" < "!=").
    Conflict between rule 32 and token '+' resolved as shift ("||" < '+').
    Conflict between rule 32 and token '-' resolved as shift ("||" < '-').
    Conflict between rule 32 and token '*' resolved as shift ("||" < '*').
    Conflict between rule 32 and token "++" resolved as shift ("||" < "++").
    Conflict between rule 32 and token "--" resolved as shift ("||" < "--").
    Conflict between rule 32 and token '(' resolved as shift ("||" < '(').
    Conflict between rule 32 and token '[' resolved as shift ("||" < '[').


State 61

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   33     | expr "&&" expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", ')', ']']
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token ',' resolved as reduce (',' < "&&").
    Conflict between rule 33 and token ":=" resolved as reduce (":=" < "&&").
    Conflict between rule 33 and token "*=" resolved as reduce ("*=" < "&&").
    Conflict between rule 33 and token "+=" resolved as reduce ("+=" < "&&").
    Conflict between rule 33 and token "-=" resolved as reduce ("-=" < "&&").
    Conflict between rule 33 and token "||" resolved as reduce ("||" < "&&").
    Conflict between rule 33 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 33 and token "==" resolved as shift ("&&" < "==").
    Conflict between rule 33 and token "!=" resolved as shift ("&&" < "!=").
    Conflict between rule 33 and token '+' resolved as shift ("&&" < '+').
    Conflict between rule 33 and token '-' resolved as shift ("&&" < '-').
    Conflict between rule 33 and token '*' resolved as shift ("&&" < '*').
    Conflict between rule 33 and token "++" resolved as shift ("&&" < "++").
    Conflict between rule 33 and token "--" resolved as shift ("&&" < "--").
    Conflict between rule 33 and token '(' resolved as shift ("&&" < '(').
    Conflict between rule 33 and token '[' resolved as shift ("&&" < '[').


State 62

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   34     | expr "==" expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", "==", "!=", ')', ']']
   35     | expr . "!=" expr
   36     | expr . ',' expr

    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token ',' resolved as reduce (',' < "==").
    Conflict between rule 34 and token ":=" resolved as reduce (":=" < "==").
    Conflict between rule 34 and token "*=" resolved as reduce ("*=" < "==").
    Conflict between rule 34 and token "+=" resolved as reduce ("+=" < "==").
    Conflict between rule 34 and token "-=" resolved as reduce ("-=" < "==").
    Conflict between rule 34 and token "||" resolved as reduce ("||" < "==").
    Conflict between rule 34 and token "&&" resolved as reduce ("&&" < "==").
    Conflict between rule 34 and token "==" resolved as reduce (%left "==").
    Conflict between rule 34 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 34 and token '+' resolved as shift ("==" < '+').
    Conflict between rule 34 and token '-' resolved as shift ("==" < '-').
    Conflict between rule 34 and token '*' resolved as shift ("==" < '*').
    Conflict between rule 34 and token "++" resolved as shift ("==" < "++").
    Conflict between rule 34 and token "--" resolved as shift ("==" < "--").
    Conflict between rule 34 and token '(' resolved as shift ("==" < '(').
    Conflict between rule 34 and token '[' resolved as shift ("==" < '[').


State 63

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   35     | expr "!=" expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", "==", "!=", ')', ']']
   36     | expr . ',' expr

    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token ',' resolved as reduce (',' < "!=").
    Conflict between rule 35 and token ":=" resolved as reduce (":=" < "!=").
    Conflict between rule 35 and token "*=" resolved as reduce ("*=" < "!=").
    Conflict between rule 35 and token "+=" resolved as reduce ("+=" < "!=").
    Conflict between rule 35 and token "-=" resolved as reduce ("-=" < "!=").
    Conflict between rule 35 and token "||" resolved as reduce ("||" < "!=").
    Conflict between rule 35 and token "&&" resolved as reduce ("&&" < "!=").
    Conflict between rule 35 and token "==" resolved as reduce (%left "==").
    Conflict between rule 35 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 35 and token '+' resolved as shift ("!=" < '+').
    Conflict between rule 35 and token '-' resolved as shift ("!=" < '-').
    Conflict between rule 35 and token '*' resolved as shift ("!=" < '*').
    Conflict between rule 35 and token "++" resolved as shift ("!=" < "++").
    Conflict between rule 35 and token "--" resolved as shift ("!=" < "--").
    Conflict between rule 35 and token '(' resolved as shift ("!=" < '(').
    Conflict between rule 35 and token '[' resolved as shift ("!=" < '[').


State 64

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   23     | expr '+' expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", "==", "!=", '+', '-', ')', ']']
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token ',' resolved as reduce (',' < '+').
    Conflict between rule 23 and token ":=" resolved as reduce (":=" < '+').
    Conflict between rule 23 and token "*=" resolved as reduce ("*=" < '+').
    Conflict between rule 23 and token "+=" resolved as reduce ("+=" < '+').
    Conflict between rule 23 and token "-=" resolved as reduce ("-=" < '+').
    Conflict between rule 23 and token "||" resolved as reduce ("||" < '+').
    Conflict between rule 23 and token "&&" resolved as reduce ("&&" < '+').
    Conflict between rule 23 and token "==" resolved as reduce ("==" < '+').
    Conflict between rule 23 and token "!=" resolved as reduce ("!=" < '+').
    Conflict between rule 23 and token '+' resolved as reduce (%left '+').
    Conflict between rule 23 and token '-' resolved as reduce (%left '-').
    Conflict between rule 23 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 23 and token "++" resolved as shift ('+' < "++").
    Conflict between rule 23 and token "--" resolved as shift ('+' < "--").
    Conflict between rule 23 and token '(' resolved as shift ('+' < '(').
    Conflict between rule 23 and token '[' resolved as shift ('+' < '[').


State 65

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", "==", "!=", '+', '-', ')', ']']
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token ',' resolved as reduce (',' < '-').
    Conflict between rule 24 and token ":=" resolved as reduce (":=" < '-').
    Conflict between rule 24 and token "*=" resolved as reduce ("*=" < '-').
    Conflict between rule 24 and token "+=" resolved as reduce ("+=" < '-').
    Conflict between rule 24 and token "-=" resolved as reduce ("-=" < '-').
    Conflict between rule 24 and token "||" resolved as reduce ("||" < '-').
    Conflict between rule 24 and token "&&" resolved as reduce ("&&" < '-').
    Conflict between rule 24 and token "==" resolved as reduce ("==" < '-').
    Conflict between rule 24 and token "!=" resolved as reduce ("!=" < '-').
    Conflict between rule 24 and token '+' resolved as reduce (%left '+').
    Conflict between rule 24 and token '-' resolved as reduce (%left '-').
    Conflict between rule 24 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 24 and token "++" resolved as shift ('-' < "++").
    Conflict between rule 24 and token "--" resolved as shift ('-' < "--").
    Conflict between rule 24 and token '(' resolved as shift ('-' < '(').
    Conflict between rule 24 and token '[' resolved as shift ('-' < '[').


State 66

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   25     | expr '*' expr .  [';', ',', ":=", "*=", "+=", "-=", "||", "&&", "==", "!=", '+', '-', '*', ')', ']']
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token ',' resolved as reduce (',' < '*').
    Conflict between rule 25 and token ":=" resolved as reduce (":=" < '*').
    Conflict between rule 25 and token "*=" resolved as reduce ("*=" < '*').
    Conflict between rule 25 and token "+=" resolved as reduce ("+=" < '*').
    Conflict between rule 25 and token "-=" resolved as reduce ("-=" < '*').
    Conflict between rule 25 and token "||" resolved as reduce ("||" < '*').
    Conflict between rule 25 and token "&&" resolved as reduce ("&&" < '*').
    Conflict between rule 25 and token "==" resolved as reduce ("==" < '*').
    Conflict between rule 25 and token "!=" resolved as reduce ("!=" < '*').
    Conflict between rule 25 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 25 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 25 and token '*' resolved as reduce (%left '*').
    Conflict between rule 25 and token "++" resolved as shift ('*' < "++").
    Conflict between rule 25 and token "--" resolved as shift ('*' < "--").
    Conflict between rule 25 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 25 and token '[' resolved as shift ('*' < '[').


State 67

   21 expr: expr '(' ')' .

    $default  reduce using rule 21 (expr)


State 68

   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   22     | expr '(' expr . ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45
    ')'   shift, and go to state 74


State 69

   20 expr: expr . '[' expr ']'
   20     | expr '[' expr . ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45
    ']'   shift, and go to state 75


State 70

    3 function: "function" IDENTIFIER '(' . paramdecls ')' type var_defs ';' stmnt
    4 paramdecls: .  [')']
    5           | . paramdecl
    6 paramdecl: . paramdecl ',' IDENTIFIER type
    7          | . IDENTIFIER type

    IDENTIFIER  shift, and go to state 76

    $default  reduce using rule 4 (paramdecls)

    paramdecls  go to state 77
    paramdecl   go to state 78


State 71

   12 stmnt: RETURN expr ';' .

    $default  reduce using rule 12 (stmnt)


State 72

   10 stmnt: IF '(' expr . ')' THEN stmnt ELSE stmnt
   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45
    ')'   shift, and go to state 79


State 73

   11 stmnt: WHILE '(' expr . ')' stmnt
   20 expr: expr . '[' expr ']'
   21     | expr . '(' ')'
   22     | expr . '(' expr ')'
   23     | expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . ":=" expr
   27     | expr . "*=" expr
   28     | expr . "+=" expr
   29     | expr . "-=" expr
   30     | expr . "--"
   31     | expr . "++"
   32     | expr . "||" expr
   33     | expr . "&&" expr
   34     | expr . "==" expr
   35     | expr . "!=" expr
   36     | expr . ',' expr

    ','   shift, and go to state 30
    ":="  shift, and go to state 31
    "*="  shift, and go to state 32
    "+="  shift, and go to state 33
    "-="  shift, and go to state 34
    "||"  shift, and go to state 35
    "&&"  shift, and go to state 36
    "=="  shift, and go to state 37
    "!="  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    "++"  shift, and go to state 42
    "--"  shift, and go to state 43
    '('   shift, and go to state 44
    '['   shift, and go to state 45
    ')'   shift, and go to state 80


State 74

   22 expr: expr '(' expr ')' .

    $default  reduce using rule 22 (expr)


State 75

   20 expr: expr '[' expr ']' .

    $default  reduce using rule 20 (expr)


State 76

    7 paramdecl: IDENTIFIER . type
    8 type: . ':' "int"

    ':'  shift, and go to state 81

    type  go to state 82


State 77

    3 function: "function" IDENTIFIER '(' paramdecls . ')' type var_defs ';' stmnt

    ')'  shift, and go to state 83


State 78

    5 paramdecls: paramdecl .  [')']
    6 paramdecl: paramdecl . ',' IDENTIFIER type

    ','  shift, and go to state 84

    $default  reduce using rule 5 (paramdecls)


State 79

   10 stmnt: IF '(' expr ')' . THEN stmnt ELSE stmnt

    THEN  shift, and go to state 85


State 80

    9 stmnt: . rec_stmnt END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   11      | . WHILE '(' expr ')' stmnt
   11      | WHILE '(' expr ')' . stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    stmnt      go to state 86
    rec_stmnt  go to state 26
    expr       go to state 27


State 81

    8 type: ':' . "int"

    "int"  shift, and go to state 87


State 82

    7 paramdecl: IDENTIFIER type .

    $default  reduce using rule 7 (paramdecl)


State 83

    3 function: "function" IDENTIFIER '(' paramdecls ')' . type var_defs ';' stmnt
    8 type: . ':' "int"

    ':'  shift, and go to state 81

    type  go to state 88


State 84

    6 paramdecl: paramdecl ',' . IDENTIFIER type

    IDENTIFIER  shift, and go to state 89


State 85

    9 stmnt: . rec_stmnt END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   10      | IF '(' expr ')' THEN . stmnt ELSE stmnt
   11      | . WHILE '(' expr ')' stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    stmnt      go to state 90
    rec_stmnt  go to state 26
    expr       go to state 27


State 86

   11 stmnt: WHILE '(' expr ')' stmnt .

    $default  reduce using rule 11 (stmnt)


State 87

    8 type: ':' "int" .

    $default  reduce using rule 8 (type)


State 88

    3 function: "function" IDENTIFIER '(' paramdecls ')' type . var_defs ';' stmnt
   37 var_defs: . VAR IDENTIFIER '=' expr
   38         | . VAR IDENTIFIER
   39         | . var_defs ',' IDENTIFIER '=' expr
   40         | . var_defs ',' IDENTIFIER

    VAR  shift, and go to state 6

    var_defs  go to state 91


State 89

    6 paramdecl: paramdecl ',' IDENTIFIER . type
    8 type: . ':' "int"

    ':'  shift, and go to state 81

    type  go to state 92


State 90

   10 stmnt: IF '(' expr ')' THEN stmnt . ELSE stmnt

    ELSE  shift, and go to state 93


State 91

    3 function: "function" IDENTIFIER '(' paramdecls ')' type var_defs . ';' stmnt
   39 var_defs: var_defs . ',' IDENTIFIER '=' expr
   40         | var_defs . ',' IDENTIFIER

    ';'  shift, and go to state 94
    ','  shift, and go to state 10


State 92

    6 paramdecl: paramdecl ',' IDENTIFIER type .

    $default  reduce using rule 6 (paramdecl)


State 93

    9 stmnt: . rec_stmnt END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   10      | IF '(' expr ')' THEN stmnt ELSE . stmnt
   11      | . WHILE '(' expr ')' stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    stmnt      go to state 95
    rec_stmnt  go to state 26
    expr       go to state 27


State 94

    3 function: "function" IDENTIFIER '(' paramdecls ')' type var_defs ';' . stmnt
    9 stmnt: . rec_stmnt END
   10      | . IF '(' expr ')' THEN stmnt ELSE stmnt
   11      | . WHILE '(' expr ')' stmnt
   12      | . RETURN expr ';'
   13      | . expr ';'
   14      | . ';'
   15 rec_stmnt: . BEGIN
   16          | . rec_stmnt stmnt
   17 expr: . NUMCONST
   18     | . IDENTIFIER
   19     | . '(' expr ')'
   20     | . expr '[' expr ']'
   21     | . expr '(' ')'
   22     | . expr '(' expr ')'
   23     | . expr '+' expr
   24     | . expr '-' expr
   25     | . expr '*' expr
   26     | . expr ":=" expr
   27     | . expr "*=" expr
   28     | . expr "+=" expr
   29     | . expr "-=" expr
   30     | . expr "--"
   31     | . expr "++"
   32     | . expr "||" expr
   33     | . expr "&&" expr
   34     | . expr "==" expr
   35     | . expr "!=" expr
   36     | . expr ',' expr

    NUMCONST    shift, and go to state 14
    BEGIN       shift, and go to state 19
    IDENTIFIER  shift, and go to state 15
    RETURN      shift, and go to state 20
    IF          shift, and go to state 21
    WHILE       shift, and go to state 22
    ';'         shift, and go to state 23
    '('         shift, and go to state 16

    stmnt      go to state 96
    rec_stmnt  go to state 26
    expr       go to state 27


State 95

   10 stmnt: IF '(' expr ')' THEN stmnt ELSE stmnt .

    $default  reduce using rule 10 (stmnt)


State 96

    3 function: "function" IDENTIFIER '(' paramdecls ')' type var_defs ';' stmnt .

    $default  reduce using rule 3 (function)
